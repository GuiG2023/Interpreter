GOTO start<<1>>
[] 
LIT 0	int x
[0] 
GOTO continue<<3>>
[0] 
LIT 0	int k
[0, 0] 
LIT 5
[0, 0, 5] 
STORE 0 x	x = 5
[5, 0] 
ARGS 0
[5, 0] [] 
CALL Read	Read()
[5, 0] [] 
Please enter an integer: 5
READ
[5, 0] [5] 
RETURN
[5, 0, 5] 
ARGS 1
[5, 0] [5] 
CALL fib<<2>>	fib(5)
[5, 0] [5] 
LOAD 0 n	<load n>
[5, 0] [5, 5] 
LIT 1
[5, 0] [5, 5, 1] 
BOP <=
[5, 0] [5, 0] 
FALSEBRANCH else<<4>>
[5, 0] [5] 
LOAD 0 n	<load n>
[5, 0] [5, 5] 
LIT 2
[5, 0] [5, 5, 2] 
BOP ==
[5, 0] [5, 0] 
FALSEBRANCH else<<6>>
[5, 0] [5] 
LOAD 0 n	<load n>
[5, 0] [5, 5] 
LIT 2
[5, 0] [5, 5, 2] 
BOP -
[5, 0] [5, 3] 
ARGS 1
[5, 0] [5] [3] 
CALL fib<<2>>	fib(3)
[5, 0] [5] [3] 
LOAD 0 n	<load n>
[5, 0] [5] [3, 3] 
LIT 1
[5, 0] [5] [3, 3, 1] 
BOP <=
[5, 0] [5] [3, 0] 
FALSEBRANCH else<<4>>
[5, 0] [5] [3] 
LOAD 0 n	<load n>
[5, 0] [5] [3, 3] 
LIT 2
[5, 0] [5] [3, 3, 2] 
BOP ==
[5, 0] [5] [3, 0] 
FALSEBRANCH else<<6>>
[5, 0] [5] [3] 
LOAD 0 n	<load n>
[5, 0] [5] [3, 3] 
LIT 2
[5, 0] [5] [3, 3, 2] 
BOP -
[5, 0] [5] [3, 1] 
ARGS 1
[5, 0] [5] [3] [1] 
CALL fib<<2>>	fib(1)
[5, 0] [5] [3] [1] 
LOAD 0 n	<load n>
[5, 0] [5] [3] [1, 1] 
LIT 1
[5, 0] [5] [3] [1, 1, 1] 
BOP <=
[5, 0] [5] [3] [1, 1] 
FALSEBRANCH else<<4>>
[5, 0] [5] [3] [1] 
LIT 1
[5, 0] [5] [3] [1, 1] 
RETURN fib<<2>>  EXIT fib : 1
[5, 0] [5] [3, 1] 
LOAD 0 n	<load n>
[5, 0] [5] [3, 1, 3] 
LIT 1
[5, 0] [5] [3, 1, 3, 1] 
BOP -
[5, 0] [5] [3, 1, 2] 
ARGS 1
[5, 0] [5] [3, 1] [2] 
CALL fib<<2>>	fib(2)
[5, 0] [5] [3, 1] [2] 
LOAD 0 n	<load n>
[5, 0] [5] [3, 1] [2, 2] 
LIT 1
[5, 0] [5] [3, 1] [2, 2, 1] 
BOP <=
[5, 0] [5] [3, 1] [2, 0] 
FALSEBRANCH else<<4>>
[5, 0] [5] [3, 1] [2] 
LOAD 0 n	<load n>
[5, 0] [5] [3, 1] [2, 2] 
LIT 2
[5, 0] [5] [3, 1] [2, 2, 2] 
BOP ==
[5, 0] [5] [3, 1] [2, 1] 
FALSEBRANCH else<<6>>
[5, 0] [5] [3, 1] [2] 
LIT 1
[5, 0] [5] [3, 1] [2, 1] 
RETURN fib<<2>>  EXIT fib : 1
[5, 0] [5] [3, 1, 1] 
BOP +
[5, 0] [5] [3, 2] 
RETURN fib<<2>>  EXIT fib : 2
[5, 0] [5, 2] 
LOAD 0 n	<load n>
[5, 0] [5, 2, 5] 
LIT 1
[5, 0] [5, 2, 5, 1] 
BOP -
[5, 0] [5, 2, 4] 
ARGS 1
[5, 0] [5, 2] [4] 
CALL fib<<2>>	fib(4)
[5, 0] [5, 2] [4] 
LOAD 0 n	<load n>
[5, 0] [5, 2] [4, 4] 
LIT 1
[5, 0] [5, 2] [4, 4, 1] 
BOP <=
[5, 0] [5, 2] [4, 0] 
FALSEBRANCH else<<4>>
[5, 0] [5, 2] [4] 
LOAD 0 n	<load n>
[5, 0] [5, 2] [4, 4] 
LIT 2
[5, 0] [5, 2] [4, 4, 2] 
BOP ==
[5, 0] [5, 2] [4, 0] 
FALSEBRANCH else<<6>>
[5, 0] [5, 2] [4] 
LOAD 0 n	<load n>
[5, 0] [5, 2] [4, 4] 
LIT 2
[5, 0] [5, 2] [4, 4, 2] 
BOP -
[5, 0] [5, 2] [4, 2] 
ARGS 1
[5, 0] [5, 2] [4] [2] 
CALL fib<<2>>	fib(2)
[5, 0] [5, 2] [4] [2] 
LOAD 0 n	<load n>
[5, 0] [5, 2] [4] [2, 2] 
LIT 1
[5, 0] [5, 2] [4] [2, 2, 1] 
BOP <=
[5, 0] [5, 2] [4] [2, 0] 
FALSEBRANCH else<<4>>
[5, 0] [5, 2] [4] [2] 
LOAD 0 n	<load n>
[5, 0] [5, 2] [4] [2, 2] 
LIT 2
[5, 0] [5, 2] [4] [2, 2, 2] 
BOP ==
[5, 0] [5, 2] [4] [2, 1] 
FALSEBRANCH else<<6>>
[5, 0] [5, 2] [4] [2] 
LIT 1
[5, 0] [5, 2] [4] [2, 1] 
RETURN fib<<2>>  EXIT fib : 1
[5, 0] [5, 2] [4, 1] 
LOAD 0 n	<load n>
[5, 0] [5, 2] [4, 1, 4] 
LIT 1
[5, 0] [5, 2] [4, 1, 4, 1] 
BOP -
[5, 0] [5, 2] [4, 1, 3] 
ARGS 1
[5, 0] [5, 2] [4, 1] [3] 
CALL fib<<2>>	fib(3)
[5, 0] [5, 2] [4, 1] [3] 
LOAD 0 n	<load n>
[5, 0] [5, 2] [4, 1] [3, 3] 
LIT 1
[5, 0] [5, 2] [4, 1] [3, 3, 1] 
BOP <=
[5, 0] [5, 2] [4, 1] [3, 0] 
FALSEBRANCH else<<4>>
[5, 0] [5, 2] [4, 1] [3] 
LOAD 0 n	<load n>
[5, 0] [5, 2] [4, 1] [3, 3] 
LIT 2
[5, 0] [5, 2] [4, 1] [3, 3, 2] 
BOP ==
[5, 0] [5, 2] [4, 1] [3, 0] 
FALSEBRANCH else<<6>>
[5, 0] [5, 2] [4, 1] [3] 
LOAD 0 n	<load n>
[5, 0] [5, 2] [4, 1] [3, 3] 
LIT 2
[5, 0] [5, 2] [4, 1] [3, 3, 2] 
BOP -
[5, 0] [5, 2] [4, 1] [3, 1] 
ARGS 1
[5, 0] [5, 2] [4, 1] [3] [1] 
CALL fib<<2>>	fib(1)
[5, 0] [5, 2] [4, 1] [3] [1] 
LOAD 0 n	<load n>
[5, 0] [5, 2] [4, 1] [3] [1, 1] 
LIT 1
[5, 0] [5, 2] [4, 1] [3] [1, 1, 1] 
BOP <=
[5, 0] [5, 2] [4, 1] [3] [1, 1] 
FALSEBRANCH else<<4>>
[5, 0] [5, 2] [4, 1] [3] [1] 
LIT 1
[5, 0] [5, 2] [4, 1] [3] [1, 1] 
RETURN fib<<2>>  EXIT fib : 1
[5, 0] [5, 2] [4, 1] [3, 1] 
LOAD 0 n	<load n>
[5, 0] [5, 2] [4, 1] [3, 1, 3] 
LIT 1
[5, 0] [5, 2] [4, 1] [3, 1, 3, 1] 
BOP -
[5, 0] [5, 2] [4, 1] [3, 1, 2] 
ARGS 1
[5, 0] [5, 2] [4, 1] [3, 1] [2] 
CALL fib<<2>>	fib(2)
[5, 0] [5, 2] [4, 1] [3, 1] [2] 
LOAD 0 n	<load n>
[5, 0] [5, 2] [4, 1] [3, 1] [2, 2] 
LIT 1
[5, 0] [5, 2] [4, 1] [3, 1] [2, 2, 1] 
BOP <=
[5, 0] [5, 2] [4, 1] [3, 1] [2, 0] 
FALSEBRANCH else<<4>>
[5, 0] [5, 2] [4, 1] [3, 1] [2] 
LOAD 0 n	<load n>
[5, 0] [5, 2] [4, 1] [3, 1] [2, 2] 
LIT 2
[5, 0] [5, 2] [4, 1] [3, 1] [2, 2, 2] 
BOP ==
[5, 0] [5, 2] [4, 1] [3, 1] [2, 1] 
FALSEBRANCH else<<6>>
[5, 0] [5, 2] [4, 1] [3, 1] [2] 
LIT 1
[5, 0] [5, 2] [4, 1] [3, 1] [2, 1] 
RETURN fib<<2>>  EXIT fib : 1
[5, 0] [5, 2] [4, 1] [3, 1, 1] 
BOP +
[5, 0] [5, 2] [4, 1] [3, 2] 
RETURN fib<<2>>  EXIT fib : 2
[5, 0] [5, 2] [4, 1, 2] 
BOP +
[5, 0] [5, 2] [4, 3] 
RETURN fib<<2>>  EXIT fib : 3
[5, 0] [5, 2, 3] 
BOP +
[5, 0] [5, 5] 
RETURN fib<<2>>  EXIT fib : 5
[5, 0, 5] 
ARGS 1
[5, 0] [5] 
CALL Write	Write(5)
[5, 0] [5] 
LOAD 0 dummyFormal	<load dummyFormal>
[5, 0] [5, 5] 
5
WRITE
[5, 0] [5, 5] 
RETURN
[5, 0, 5] 
STORE 1 k	k = 5
[5, 5] 
LIT 0	int x
[5, 5, 0] 
LIT 7
[5, 5, 0, 7] 
STORE 2 x	x = 7
[5, 5, 7] 
LIT 8
[5, 5, 7, 8] 
STORE 2 x	x = 8
[5, 5, 8] 
POP 1
[5, 5] 
POP 2
[] 
